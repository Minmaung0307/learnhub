// firestore.rules
rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {
    function signedIn() { return request.auth != null; }
    function isAdmin() {
      return signedIn() &&
        get(/databases/$(db)/documents/roles/$(request.auth.uid)).data.role == "admin";
    }

    match /roles/{uid} {
      allow read: if isAdmin() || (signedIn() && request.auth.uid == uid);
      allow write: if isAdmin();
    }

    match /profiles/{uid} {
      allow read: if true;
      allow write: if signedIn() && request.auth.uid == uid;
    }

    match /announcements/{id} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /messages/{id} {
      allow read, write: if signedIn();
    }

    match /courses/{id} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /quizzes/{id} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /tasks/{id} {
      allow read, write: if signedIn() && request.resource.data.uid == request.auth.uid;
    }

    match /enrollments/{id} {
      allow read, write: if signedIn() && request.resource.data.uid == request.auth.uid || isAdmin();
    }

    match /attempts/{id} {
      allow read, write: if signedIn() && request.resource.data.uid == request.auth.uid || isAdmin();
    }

    match /payments/{id} {
      allow read, write: if signedIn() && request.resource.data.uid == request.auth.uid || isAdmin();
    }

    match /contact/{id} {
      allow read: if isAdmin();
      allow write: if true;
    }
  }
}