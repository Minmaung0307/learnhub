import { el, toast } from '../services/ui.js'; import { getFirebase } from '../services/firebase.js'; import { onAuth } from '../services/auth.js';
export async function viewLearning(){ const app=document.getElementById('app'); app.innerHTML=''; const user=await new Promise(r=>onAuth(r)); if(!user){ app.append(el('p',{},'Please login.')); return; } const {db,collection,getDocs,query,where,doc,getDoc,setDoc,serverTimestamp}=await getFirebase(); app.append(el('h2',{},'My Learning')); const enr=await getDocs(query(collection(db,'enrollments'),where('uid','==',user.uid))); if(enr.empty){ app.append(el('p',{},"You haven't enrolled any course yet.")); return;} const list=el('div',{class:'grid cards'}); app.append(list); for(const d of enr.docs){ const courseId=d.data().courseId; const cdoc=await getDoc(doc(db,'courses',courseId)); if(!cdoc.exists()) continue; const c=cdoc.data(); const card=el('div',{class:'card'},[ el('div',{class:'row gap'},[ el('img',{src:c.image,style:'width:90px;height:70px;object-fit:cover;border-radius:10px'}), el('div',{},[el('div',{class:'title'},c.title), el('div',{class:'muted'},c.short)]) ]), el('div',{class:'progress mt-2'},[el('i',{style:'width:0%','data-bar':courseId})]), el('div',{class:'row gap mt-2'},[ el('button',{class:'btn primary',onclick:()=>openPlayer(courseId)},'Open'), el('button',{class:'btn',onclick:()=>bookmark(courseId)},'Bookmark') ]) ]); list.append(card); refreshProgress(courseId); }
 async function bookmark(courseId){ await setDoc(doc(db,'users',user.uid,'progress',courseId),{bookmarks:Date.now()},{merge:true}); toast('Bookmarked'); }
 async function refreshProgress(courseId){ const p=await getDoc(doc(db,'users',user.uid,'progress',courseId)); const pct=p.exists()?(p.data().percent||0):0; const bar=document.querySelector(`[data-bar="${courseId}"]`); if(bar) bar.style.width = `${Math.round(pct)}%`; }
 async function openPlayer(courseId){ app.innerHTML=''; const c=(await getDoc(doc(db,'courses',courseId))).data(); app.append(el('button',{class:'btn mb-2',onclick:()=>viewLearning()},'← Back')); app.append(el('h2',{},c.title)); const lessons=[ {id:'l1',title:'Intro',html:'<p>Welcome.</p>'},{id:'l2',title:'Video',html:'<p>Watch.</p>',media:{type:'video',src:'https://samplelib.com/lib/preview/mp4/sample-5s.mp4'}},{id:'l3',title:'Audio',html:'<p>Listen.</p>',media:{type:'audio',src:'https://samplelib.com/lib/preview/mp3/sample-3s.mp3'}} ]; let idx=0; const wrap=el('div',{class:'card'}); app.append(wrap); const bar=el('div',{class:'progress mb-2'},[el('i',{id:'pb'})]); app.append(bar); function render(){ const L=lessons[idx]; wrap.innerHTML=''; wrap.append(el('div',{class:'lesson'},[ el('div',{class:'meta'},[`Lesson ${idx+1}/${lessons.length} · `, el('b',{},L.title)]), el('div',{class:'mt-2',innerHTML:L.html}), L.media && (L.media.type==='video'? el('video',{controls:true,src:L.media.src,style:'width:100%;border-radius:10px',onended:()=>advance()}): el('audio',{controls:true,src:L.media.src,onended:()=>advance()})) ].filter(Boolean))); document.getElementById('pb').style.width=`${Math.round((idx/lessons.length)*100)}%`; saveProgress(); } function advance(){ if(idx<lessons.length-1){ idx++; render(); } else { document.getElementById('pb').style.width='100%'; saveProgress(true); toast('Completed!'); } } app.append(el('div',{class:'row gap mt-2'},[ el('button',{class:'btn',onclick:()=>{if(idx>0){idx--;render();}}},'Prev'), el('button',{class:'btn primary',onclick:()=>advance()},'Next') ])); async function saveProgress(done=false){ await setDoc(doc(db,'users',user.uid,'progress',courseId),{percent:done?100:Math.round((idx/lessons.length)*100),updatedAt:serverTimestamp()},{merge:true}); } render(); } }